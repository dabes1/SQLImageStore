














/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/

-- Merchant Intake SQL Infrastructures

/* RECREATED *****/
CREATE TABLE tblMerchantIntakeInquiries (
	ID							INT IDENTITY(1, 1) NOT NULL, 
	ReferrerID					INT,
	ReferrerCampaignID			INT, 
	FirstName					NVARCHAR(50), 
	LastName					NVARCHAR(50), 
	BusinessName				NVARCHAR(100), 
	Country						NVARCHAR(100), 
	WebsiteURL					NVARCHAR(100), 
	Email						NVARCHAR(100), 
	Phone						NVARCHAR(15), 
	BusinessType				NVARCHAR(100), 
	Other						NVARCHAR(100), 
	Product_ServiceOffered		NVARCHAR(1000), 
	YearsInBusiness				INT, 
	MonthlyVolume				NVARCHAR(50), 
	StatementFileAWSID			NVARCHAR(250), 
	SubmittedDate				DATETIME
)  
   
/* RECREATED *****/
CREATE TABLE tblMerchantIntakeReferrer (
	ID				INT IDENTITY(1,1) NOT NULL, 
	Organization	NVARCHAR(200), 
	Email			NVARCHAR(100), 
	ContactName		NVARCHAR(100), 
	Active			TINYINT
 )
 
  
/* RECREATED *****/
CREATE TABLE tblMerchantIntakeCampaign (
	ID						INT IDENTITY(1,1) NOT NULL, 
	ReferrerID				INT,
	ReferrerCampaignID		INT,  -- the Referrer's external campaign ID
	CampaignImage			IMAGE,
	CampaignImageDirPath	NVARCHAR(200), 
	CampaignDescription		NVARCHAR(1000), 
	Verbiage				NVARCHAR(1000), 
	Active					TINYINT 
)





/* RECREATED *****/
-- This one retrieves the Referring organization's info.
USE [appsosdev]
GO
/****** Object:  StoredProcedure [dbo].[proc_MerchantIntakeReferrerGet]    Script Date: 03/30/2016 11:55:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[proc_MerchantIntakeReferrerGet]
(
	@ReferrerID			INT,
	@ReferrerCampaignID	INT = 0
)
AS
	SELECT 
		miR.Organization,
		miR.Email AS 'OrganizationContactEmail',
		miR.ContactName,		
		miC.CampaignImage,
		miC.CampaignImageDirPath,
		miC.CampaignDescription,
		miC.Verbiage
	FROM tblMerchantIntakeCampaign miC JOIN tblMerchantIntakeReferrer miR ON miC.ReferrerID = miR.ID
	WHERE miC.ReferrerCampaignID = @ReferrerCampaignID and miC.ReferrerID = @ReferrerID

RETURN;



/* RECREATED *****/
USE [appsosdev]
GO
/****** Object:  StoredProcedure [dbo].[sp_MerchantIntakeReferrerOrganizationSave]    Script Date: 03/30/2016 11:55:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[proc_MerchantIntakeReferrerOrganizationSave]
(
	@ReferrerID				INT,					-- 0 indicates a new referrer org entry, anything else means UPDATE
	@Organization			NVARCHAR(200) = NULL,
	@Email					NVARCHAR(100) = NULL,
	@ContactName			NVARCHAR(100) = NULL,
	
	@ReferrerCampaignID		INT = 0,				-- 0 = no campaign to insert/udpate
	@CampaignImage			IMAGE = NULL,			-- CampaignImage and CampaignImageDirPath should come in together
	@CampaignImageDirPath	NVARCHAR(200) = NULL,	-- CampaignImageDirPath and CampaignImage should come in together
	@CampaignDescription	NVARCHAR(1000) = NULL,
	@Verbiage				NVARCHAR(1000) = NULL,
	
	@oRefID					INT = 0 OUTPUT
)
AS
	DECLARE
		@TmpID		INT = 0,
		@RC			INT = 0;

	BEGIN TRANSACTION

	IF (@ReferrerID = 0)		-- NEW ENTRY
	BEGIN
		INSERT INTO tblMerchantIntakeReferrer
		(
			Organization,
			Email,
			ContactName,
			Active
		)
		VALUES
		(
			@Organization,
			@Email,
			@ContactName,
			1
		) 
		SET @oRefID = @@IDENTITY;

		INSERT INTO tblMerchantIntakeCampaign
			( ReferrerID, ReferrerCampaignID, CampaignImage, CampaignImageDirPath, CampaignDescription,	Verbiage, Active)
		VALUES
			(	 @oRefID,					0,		   NULL,				 NULL,				  NULL,		NULL, 1)			
		SET @RC = @@ERROR;
		
		IF (@RC != 0)	-- There was an error with the update
		BEGIN
			-- ERROR
			ROLLBACK TRANSACTION;
			RETURN;
		END			
		
		IF (@ReferrerCampaignID > 0)
		BEGIN
			INSERT INTO tblMerchantIntakeCampaign
				( ReferrerID,  ReferrerCampaignID,					CampaignImage,					CampaignImageDirPath,				   CampaignDescription,					 Verbiage, Active)
			VALUES
				(	 @oRefID, @ReferrerCampaignID, COALESCE(@CampaignImage, NULL), COALESCE(@CampaignImageDirPath, NULL), COALESCE(@CampaignDescription, NULL), COALESCE(@Verbiage, NULL),		1)
			SET @RC = @@ERROR;
			
			IF (@RC != 0)	-- There was an error with the update
			BEGIN
				-- ERROR
				ROLLBACK TRANSACTION;
				RETURN;
			END							
		END
	END	
	ELSE  -- else, there's a value in @ReferrerID
	BEGIN	
		IF NOT EXISTS(SELECT * FROM tblMerchantIntakeReferrer WHERE ID = @ReferrerID)
		BEGIN
			-- ERROR
			ROLLBACK TRANSACTION;
			RETURN;
		END

		IF (@Organization IS NOT NULL) OR (@Email IS NOT NULL) OR (@ContactName IS NOT NULL) -- there's an update to the referrer org entry
		BEGIN
			UPDATE tblMerchantIntakeReferrer SET
				Organization = COALESCE(@Organization, Organization),
				Email = COALESCE(@Email, Email),
				ContactName = COALESCE(@ContactName, ContactName)
			WHERE
				ID = @ReferrerID;
			SET @RC = @@ERROR;
			
			IF (@RC != 0)	-- There was an error with the update
			BEGIN
				-- ERROR
				ROLLBACK TRANSACTION;
				RETURN;
			END
		END
		
		IF (@ReferrerCampaignID > 0)	-- update to the campaign
		BEGIN
			-- Is it a new campaign??
			IF NOT EXISTS(SELECT * FROM tblMerchantIntakeCampaign WHERE ReferrerID = @ReferrerID AND ReferrerCampaignID = @ReferrerCampaignID)
			-- YES, it doesn't exist so it's a new campaign
			BEGIN
				INSERT INTO tblMerchantIntakeCampaign
					( ReferrerID,  ReferrerCampaignID,					CampaignImage,					CampaignImageDirPath,				   CampaignDescription,					 Verbiage, Active)
				VALUES
					(	 @oRefID, @ReferrerCampaignID, COALESCE(@CampaignImage, NULL), COALESCE(@CampaignImageDirPath, NULL), COALESCE(@CampaignDescription, NULL), COALESCE(@Verbiage, NULL),		1)			
				SET @RC = @@ERROR;
				
				IF (@RC != 0)	-- There was an error with the update
				BEGIN
					-- ERROR
					ROLLBACK TRANSACTION;
					RETURN;
				END								
			END
			-- otherwise it's not a new campaign and we are updating the campaign
			ELSE
			BEGIN
				IF (@CampaignImage IS NOT NULL) OR (@CampaignImageDirPath IS NOT NULL) OR (@CampaignDescription IS NOT NULL) OR (@Verbiage IS NOT NULL)
				BEGIN
					UPDATE tblMerchantIntakeCampaign SET
						CampaignImage = COALESCE(@CampaignImage, CampaignImage),
						CampaignImageDirPath = COALESCE(@CampaignImageDirPath, CampaignImageDirPath),
						CampaignDescription = COALESCE(@CampaignDescription, CampaignDescription),
						Verbiage = COALESCE(@Verbiage, Verbiage)
					WHERE
						ReferrerID = @ReferrerID
						AND ReferrerCampaignID = @ReferrerCampaignID
				END
				SET @RC = @@ERROR;
				
				IF (@RC != 0)	-- There was an error with the update
				BEGIN
					-- ERROR
					ROLLBACK TRANSACTION;
					RETURN;
				END			
			END
		END
	END
	
	COMMIT TRAN;

RETURN;
